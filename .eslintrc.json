{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "next",
    "airbnb",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:react/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2021,
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "react",
    "react-hooks",
    "unused-imports",
    "import",
    "simple-import-sort",
    "prettier",
    "@typescript-eslint"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "trailingComma": "all",
        "tabWidth": 2,
        "printWidth": 120,
        "semi": true,
        "singleQuote": true
      }
    ],
    //OLD
    "react-hooks/exhaustive-deps": "off",
    // Main rules
    "arrow-body-style": "off",
    "no-constant-condition": "off",
    "vars-on-top": "off",
    "no-plusplus": "off",
    "no-continue": "off",
    "no-alert": "off",
    "no-await-in-loop": "off",
    "radix": "off",
    "consistent-return": "off",
    "no-underscore-dangle": "off",
    "no-nested-ternary": "off",
    "camelcase": "off",
    "no-console": "off",
    "spaced-comment": "error",
    "no-inline-comments": "warn",
    "class-methods-use-this": "off",

    "@typescript-eslint/default-param-last": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/consistent-type-imports": "error",

    // Import
    "import/first": "error",
    "import/exports-last": "off",
    "import/newline-after-import": "error",
    "import/no-named-as-default": "off",
    "import/prefer-default-export": "off",
    "import/extensions": "off",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Packages. `react` related packages come first
          ["^react", "^@?\\w"],
          // Side effect imports
          ["^\\u0000"],
          // Internal components & containers
          ["^(containers|components)(/.*|$)"],
          // Internal hooks
          ["^(hooks)(/.*|$)"],
          // Internal constants
          ["^(constants)(/.*|$)"],
          // Internal types
          ["^(types)(/.*|$)"],
          // Internal apis
          ["^(apis)(/.*|$)"],
          // Parent imports. Put `..` last
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports
          ["^.+\\.s?css$"]
        ]
      }
    ],
    "unused-imports/no-unused-imports": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 0,
        "maxBOF": 0
      }
    ],
    "prefer-regex-literals": "off",
    // React
    "react/no-danger": "off",
    "react/no-array-index-key": "error",
    "react/no-unescaped-entities": "error",
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [".js", "ts", "jsx", "tsx"]
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "react/self-closing-comp": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-props-no-spreading": [
      "error",
      {
        "custom": "ignore"
      }
    ],
    "react/forbid-prop-types": "off",
    "react/button-has-type": "off",
    "react/require-default-props": "off",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    // TailwindCSS
    "tailwindcss/no-custom-classname": "off",
    "tailwindcss/classnames-order": "warn"
  },
  "settings": {
    "postcss-modules": {
      "camelCase": true,
      "include": "/.scss$/",
      "exclude": "//node_modules//"
    },
    "import/resolver": {
      "babel-module": {
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".css"]
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".css"],
        "paths": ["src"]
      }
    }
  }
}

